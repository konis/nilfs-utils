.\"  Copyright (C) 2007-2012 Nippon Telegraph and Telephone Corporation.
.\"  Written by Ryusuke Konishi <konishi.ryusuke@gmail.com>
.\"
.TH MOUNT.NILFS2 8 "Apr 2014" "nilfs-utils version 2.2"
.SH NAME
mount.nilfs2 \- mount a NILFS2 file system
.SH SYNOPSIS
.B mount -t nilfs2
[\fB\-finrvw\fP] [\fB\-o\fP \fIoptions\fP [\fB,\fP...]] \fIdevice\fP \fIdir\fP
.br
.B mount -t nilfs2
[\fB\-finrvw\fP] [\fB\-o\fP \fIoptions\fP [\fB,\fP...]] \fIdevice\fP | \fIdir\fP
.sp
.B mount.nilfs2
[\fB\-fnrvw\fP] [\fB\-o\fP \fIoptions\fP [\fB,\fP...]] \fIdevice\fP \fIdir\fP
.sp
.B mount.nilfs2
[\fB\-V\fP]
.SH DESCRIPTION
.B mount.nilfs2
serves to attach a NILFS2 file system on the specified directory
\fIdir\fP. It is intended to be executed from \fBmount\fP(8), and will
invoke the garbage collector \fBnilfs_cleanerd\fP(8) after an actual
mount system call has succeeded.  Conversely, \fBumount.nilfs2\fP(8)
will shutdown the garbage collector before detaching the file system.
.PP
The standard command line interface is the first form:
.RS
.br
.BI "mount \-t nilfs2" " \fR[\fPoptions\fR]\fP device dir"
.RE
This tells the kernel to attach the NILFS2 file system on \fIdevice\fP
at the directory \fIdir\fP.  With the second form, the mount program
tries to find out a missing \fIdevice\fP or \fIdir\fP argument from
the \fI/etc/fstab\fP table.
.PP
The third form, which directly invokes \fBmount.nilfs2\fP, is also
usable since \fBmount.nilfs2\fP maintains by itself the system mount
state such as the list of mounted file systems described in
\fI/etc/mtab\fP. However, the first or the second form is usually
recommended because some expansive options are not supported by the
third form.
.SH OPTIONS
The full set of options used by an invocation of \fBmount\fP(8) is
determined by extracting the options from the \fIfstab\fP table, then
applying any options specified by the \fB\-o\fP argument, and finally
applying a \fB\-r\fP or \fB\-w\fP option, when present.
.PP
See \fBmount\fP(8) for the full set of options.  Commonly used options
are as follows:
.TP
.B \-V
Output version.
.TP
.B \-f
Fakes mounting the file system, meaning that the actual system call
will be skipped.  This option is used to add entries for devices that
were mounted earlier with the \fB-n\fP option. It can also be used for
invoking \fBnilfs_cleanerd\fP(8) skipped previously.
.TP
.B \-i
Don't call \fBmount.nilfs2\fP.  This disables garbage collection
and handling of pseudo mount options.
.TP
.B \-n
Mount without writing in \fI/etc/mtab\fP.  This is necessary for
example when \fI/etc\fP is on a read-only file system.
.TP
.B \-r
Mount the file system read-only.  A synonym is \fB"\-o ro"\fP.
.TP
.B \-v
Verbose mode.
.TP
.B \-w
Mount the file system read/write. This is the default. A synonym is
\fB"\-o rw"\fP.
.TP
.B \-o
Options are specified with a \fB\-o\fP flag followed by a comma
separated string of options.  Some of these options are only useful
when they appear in the \fI/etc/fstab\fP file.  For standard
filesystem options, see \fBmount\fP(8).
.SH "NILFS2 SPECIFIC MOUNT OPTIONS"
The following options apply only to the NILFS2 filesystem.  They all
follow the \fB\-o\fP flag.
.TP
.BR barrier " / " nobarrier
These options enable/disable (default is enabled) barrier writes for
the block I/O to a lower device.  The barrier write serves an
important role to ensure consistency of filesystems after a system
crash or power failure.  NILFS2 uses this feature by default to assure
the reliability.  For devices not supporting the barrier write, it
will be disabled automatically and a warning will be logged.
.TP
.BR cp=\fP\fIcheckpoint-number\fP
Specify the \fIcheckpoint-number\fP of the snapshot to be mounted.
Checkpoints and snapshots are listed by \fBlscp\fP(1).  Only the
checkpoints marked as snapshot are mountable with this option.  Note
that the read-only mount option must be specified together.
.TP
.BR errors=continue " / " errors=remount-ro " / " errors=panic
Define the behaviour when an error is encountered.  (Either ignore
errors and just mark the file system erroneous and continue, or
remount the file system read-only, or panic and halt the system.)  The
default is remount-ro.  In earlier kernels than Linux 2.6.35, continue
was the default.
.TP
.BR pp=\fP\fIprotection-period\fP
Specify the \fIprotection-period\fP for the cleaner daemon (in
seconds). nilfs_cleanerd never deletes recent checkpoints whose
elapsed time from its creation is smaller than
\fIprotection-period\fP.
.TP
.BR nogc
Disable garbage collection. The cleaner daemon will not be started.
It can be be started manually, but in that case it must also be
stopped manually before unmounting.
.TP
.BR order=relaxed " / " order=strict
Specify order semantics for file data.  Metadata is always written to
follow the POSIX semantics about the order of filesystem operations.
.RS
.TP
.B relaxed
Apply relaxed order semantics that allows modified data blocks to be
written to disk without making a checkpoint if no metadata update is
going.  This mode is equivalent to the ordered data mode of the ext3
filesystem except for the updates on data blocks still conserve
atomicity.  This will improve synchronous write performance for
overwriting.  This is the default mode.
.TP
.B strict
Apply strict in-order semantics that preserves sequence of all file
operations including overwriting of data blocks.  That means, it is
guaranteed that no overtaking of events occurs in the recovered file
system after a crash.  Unlike journaling filesystems, NILFS2 does not
write a same block twice to disk.  So there is no significant
performance degradation in comparison with the relaxed mode except for
file overwriting.
.RE
.TP
.BR norecovery
Disable recovery of the filesystem on mount.  This disables every
write access on the device for read-only mounts or snapshots.  This
option will fail for r/w mounts on an unclean volume.
.TP
.BR discard " / " nodiscard
These options enable/disable (default is disabled) the use of
discard/TRIM commands.  The discard/TRIM commands are sent to the
underlying block device when blocks are freed.  This is useful for SSD
devices and sparse/thinly-provisioned LUNs. (since 2.6.34).
.SH RETURN CODES
The return codes of \fBmount.nilfs2\fP conform to those of
\fBmount\fP(8); the following codes could be returned (the bits can be
ORed):
.TP
.BR 0
success
.TP
.BR 1
incorrect invocation or permissions
.TP
.BR 2
system error (out of memory, cannot fork, no more loop devices)
.TP
.BR 4
internal bug
.TP
.BR 8
user interrupt
.TP
.BR 16
problems writing or locking /etc/mtab
.TP
.BR 32
mount failure
.TP
.BR 64
some mount succeeded
.SH AUTHOR
.B mount.nilfs2
is written by Ryusuke Konishi <konishi.ryusuke@gmail.com> for NILFS2,
based on the mount program included in the util-linux package.
.SH AVAILABILITY
.B mount.nilfs2
is part of the nilfs-utils package and is available from
https://nilfs.sourceforge.io.
.SH SEE ALSO
.BR nilfs (8),
.BR mount (8),
.BR umount.nilfs2 (8),
.BR nilfs_cleanerd (8),
.BR lscp (1).
